variables:
  CONTAINER_IMAGE: gdr.abyle.org/$CI_PROJECT_PATH

stages:
  - build
  - test
  - build_static
  - build_image
  - release
  - deploy

build:
  image: golang:1.14
  stage: build
  script:
    - echo -e "machine git.abyle.org\nlogin ${PRIVATE_REPO_LOGIN_USER}\npassword ${PRIVATE_REPO_LOGIN_TOKEN}" > ~/.netrc
    - make

unit_tests:
  image: golang:1.14
  stage: test
  script:
    - echo -e "machine git.abyle.org\nlogin ${PRIVATE_REPO_LOGIN_USER}\npassword ${PRIVATE_REPO_LOGIN_TOKEN}" > ~/.netrc
    - make test
    - go tool cover -func coverage.out

build_static:
  image: golang:1.14
  stage: build_static
  artifacts:
    expire_in: 1 week
    paths:
    - ./bin/
  script:
    - echo -e "machine git.abyle.org\nlogin ${PRIVATE_REPO_LOGIN_USER}\npassword ${PRIVATE_REPO_LOGIN_TOKEN}" > ~/.netrc
    - make build-static

create_docker_image:
  stage: build_image
  dependencies: 
    - build_static
  tags:
    - docker-from-docker
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gdr.abyle.org
    - docker build --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA

# deploy_testing:
#   stage: deploy
#   dependencies:
#     - create_docker_image
#   image: gdr.abyle.org/abyle/dockerfiles/abyle-acicddeploy:latest
#   environment: testing
#   before_script:
#     - mkdir -p "${HOME}/.ssh/"
#     - echo "${SSH_PRIVATE_KEY}" > "${HOME}/.ssh/id_rsa"
#     - chmod 700 "${HOME}/.ssh/id_rsa"
#     - echo "$SSH_KNOWN_HOSTS" > "${HOME}/.ssh/known_hosts"
#     - chmod 644 "${HOME}/.ssh/known_hosts"
#   only:
#     - master
#   script:
#     - echo deploying to testing environment... $CONTAINER_IMAGE:$CI_COMMIT_SHA
#     - export TRANSACTIONID=`uuidgen`
#     - mkdir ${CICD_TOKEN}
#     - > 
#       echo "{
#          \"cicdToken\": \"${CICD_TOKEN}\",
#          \"transactionId\": \"${TRANSACTIONID}\",
#          \"target\": {
#            \"type\": \"PortainerStackTarget\",
#            \"stackName\": \"alolstatsdev\",
#            \"portainerEndpointId\": 1,
#            \"serviceName\": \"alolstats_dev.docker.abyle.org\",
#            \"serviceAttributes\": {
#                 \"image\": \"$CONTAINER_IMAGE:$CI_COMMIT_SHA\"
#            }
#          }
#          }" > "${CICD_TOKEN}"/job.cicd.json
#     - scp -r "${CICD_TOKEN}"/ "${SSH_USER}@${SSH_HOST}:${SSH_REMOTE_ACICD_BASE_PATH}/incoming"
#     - export OUTPUT=`ssh ${SSH_USER}@${SSH_HOST} -C "acicdstatus.py -f ${SSH_REMOTE_ACICD_BASE_PATH}/status/${TRANSACTIONID}.json"`
#     - export EXITCODE=`echo ${OUTPUT} | jq .shellExitCode`
#     - echo ${OUTPUT} | jq
#     - test -n "$EXITCODE" && exit $EXITCODE

release:
  stage: release
  dependencies:
    - create_docker_image
  tags:
    - docker-from-docker
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gdr.abyle.org
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHA $CONTAINER_IMAGE:$CI_COMMIT_TAG
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHA $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_TAG
    - docker push $CONTAINER_IMAGE:latest
  only:
    - tags
  except:
    - branches

# deploy_production:
#   stage: deploy
#   dependencies:
#     - release
#   image: gdr.abyle.org/abyle/dockerfiles/abyle-acicddeploy:latest
#   environment: production
#   before_script:
#     - mkdir -p "${HOME}/.ssh/"
#     - echo "${SSH_PRIVATE_KEY}" > "${HOME}/.ssh/id_rsa"
#     - chmod 700 "${HOME}/.ssh/id_rsa"
#     - echo "$SSH_KNOWN_HOSTS" > "${HOME}/.ssh/known_hosts"
#     - chmod 644 "${HOME}/.ssh/known_hosts"
#   script:
#     - echo deploying to production environment... $CONTAINER_IMAGE:$CI_COMMIT_TAG
#     - export TRANSACTIONID=`uuidgen`
#     - mkdir ${CICD_TOKEN}
#     - > 
#       echo "{
#          \"cicdToken\": \"${CICD_TOKEN}\",
#          \"transactionId\": \"${TRANSACTIONID}\",
#          \"target\": {
#            \"type\": \"PortainerStackTarget\",
#            \"stackName\": \"alolstats\",
#            \"portainerEndpointId\": 1,
#            \"serviceName\": \"alolstats.docker.abyle.org\",
#            \"serviceAttributes\": {
#                 \"image\": \"$CONTAINER_IMAGE:$CI_COMMIT_TAG\"
#            }
#          }
#          }" > "${CICD_TOKEN}"/job.cicd.json
#     - scp -r "${CICD_TOKEN}"/ "${SSH_USER}@${SSH_HOST}:${SSH_REMOTE_ACICD_BASE_PATH}/incoming"
#     - export OUTPUT=`ssh ${SSH_USER}@${SSH_HOST} -C "acicdstatus.py -f ${SSH_REMOTE_ACICD_BASE_PATH}/status/${TRANSACTIONID}.json"`
#     - export EXITCODE=`echo ${OUTPUT} | jq .shellExitCode`
#     - echo ${OUTPUT} | jq
#     - test -n "$EXITCODE" && exit $EXITCODE
#   only:
#     - tags
#   except:
#     - branches
#   when: manual
